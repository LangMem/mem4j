# Copyright 2024-2026 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Bidirectional Issue Translation and Update

on:
  issues:
    types: [opened]
env:
  ANTHROPIC_BASE_URL: "https://open.bigmodel.cn/api/anthropic"
jobs:
  translate_and_update:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Translate issue body with Claude (auto detect)
        id: translate
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            你是一名专业的双语翻译。请自动检测下面文本的主要语言（只会是中文或英文）：
            - 如果主要语言是中文，请将其准确、地道地翻译为英文，只返回英文翻译。
            - 如果主要语言是英文，请将其准确、地道地翻译为中文，只返回中文翻译。
            - 不要解释，不要输出原文，只返回翻译内容。
            ---
            ${{ github.event.issue.body }}

      - name: Update issue body with original and translation
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const orig = context.payload.issue.body || '';

            // Get the translation from the previous step
            // Note: The exact output property may vary, trying common ones
            const stepOutputs = ${{ toJson(steps.translate.outputs) }};
            const translated = (stepOutputs.response || stepOutputs.result || stepOutputs.output || '').trim();

            // Only update if we have a translation and it's different from original
            if (translated && translated !== orig && translated !== 'undefined') {
              const newBody = `## 原文 / Original\n${orig}\n\n## 翻译 / Translation\n${translated}`;
              await github.rest.issues.update({
                owner,
                repo,
                issue_number,
                body: newBody,
              });
              console.log('Successfully updated issue with translation');
            } else {
              console.log('No valid translation received or translation same as original');
            }

      - name: Post translation workflow summary
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Get translation result
            const stepOutputs = ${{ toJson(steps.translate.outputs) }};
            const translated = (stepOutputs.response || stepOutputs.result || stepOutputs.output || '').trim();
            const original = context.payload.issue.body || '';

            // Get workflow run URL
            const runUrl = `https://github.com/${owner}/${repo}/actions/runs/${{ github.run_id }}`;

            let commentBody = `## 🌐 Translation Workflow Summary\n\n`;

            if (translated && translated !== original && translated !== 'undefined') {
              // Detect language
              const isChineseOriginal = /[\u4e00-\u9fff]/.test(original);
              const targetLang = isChineseOriginal ? 'English' : 'Chinese';
              commentBody += `✅ **Translation completed successfully**\n`;
              commentBody += `- **Source language:** ${isChineseOriginal ? 'Chinese' : 'English'}\n`;
              commentBody += `- **Target language:** ${targetLang}\n`;
              commentBody += `- **Issue body has been updated** with both original and translated content\n\n`;
            } else {
              commentBody += `ℹ️ **Translation skipped**\n`;
              commentBody += `- Reason: Translation same as original or no valid translation received\n\n`;
            }

            commentBody += `**Workflow Run:** [View Details](${runUrl})\n`;
            commentBody += `**Time:** ${new Date().toISOString()}\n\n`;
            commentBody += `---\n*This comment was automatically generated by the Translation workflow.*`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: commentBody
            });
            console.log('Posted translation summary to issue #' + issue_number);
