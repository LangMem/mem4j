# Copyright 2024-2026 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Auto Comment for Clarity
on:
  issues:
    types: [opened]
  discussion:
    types: [created]
env:
  ANTHROPIC_BASE_URL: "https://open.bigmodel.cn/api/anthropic"
jobs:
  auto-comment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      discussions: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Analyze issue and create comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Get issue details
            const issueTitle = context.payload.issue.title || '';
            const issueBody = context.payload.issue.body || '';
            const issueLabels = context.payload.issue.labels?.map(label => label.name).join(', ') || '';

            console.log('Issue Title:', issueTitle);
            console.log('Issue Body:', issueBody);
            console.log('Issue Labels:', issueLabels);

            // Simple analysis logic
            const hasDetailedDescription = issueBody.length > 50 && !issueBody.includes('No response');
            const hasStepsToReproduce = issueBody.toLowerCase().includes('步骤') || issueBody.toLowerCase().includes('重现') || issueBody.toLowerCase().includes('reproduce');
            const hasEnvironmentInfo = issueBody.toLowerCase().includes('环境') || issueBody.toLowerCase().includes('版本') || issueBody.toLowerCase().includes('version');
            const hasExpectedBehavior = issueBody.toLowerCase().includes('期望') || issueBody.toLowerCase().includes('expected');

            // Check if this looks like a bug report that needs more info
            const isBugReport = issueTitle.toLowerCase().includes('bug') || issueTitle.toLowerCase().includes('错误');
            const needsMoreInfo = isBugReport && (!hasDetailedDescription || !hasStepsToReproduce || !hasEnvironmentInfo);

            // Also check for very short descriptions
            const hasVeryShortDescription = issueBody.trim().length < 20 || issueBody === 'No response' || issueBody.includes('这个怎么用');

            if (needsMoreInfo || hasVeryShortDescription) {
              const commentBody = '👋 感谢您提交这个 issue！\\n\\n为了更好地帮助您解决问题，请补充以下信息：\\n\\n- [ ] **详细的问题描述**：请详细描述您遇到的具体问题\\n- [ ] **重现步骤**：请提供能够重现问题的具体步骤\\n- [ ] **期望的行为**：请描述您期望的正确行为应该是什么\\n- [ ] **实际的行为**：请描述实际发生了什么\\n- [ ] **环境信息**：\\n  - mem4j 版本\\n  - Java 版本\\n  - 操作系统\\n  - 其他相关配置\\n\\n请编辑您的原始 issue 来添加这些信息，这将帮助我们更快地定位和解决问题。🙏';

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: commentBody
              });
              console.log('Posted clarity request comment to issue #' + issue_number);
            } else {
              console.log('Issue has sufficient information, no comment needed');
            }
